# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T17:46:33+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Article(BaseModel):
    link: Optional[str] = None
    pubdate: Optional[str] = None
    title: Optional[str] = None


class ContentProCompany(BaseModel):
    companyName: Optional[str] = None
    description: Optional[str] = None
    employee: Optional[str] = None
    industry: Optional[str] = None
    linkedin: Optional[str] = None
    twitter: Optional[str] = None
    website: Optional[str] = None


class ContentProSnippets(BaseModel):
    description: Optional[List[str]] = None
    text: Optional[List[str]] = None
    title: Optional[List[str]] = None


class InputCompany(BaseModel):
    companyName: Optional[str] = None
    country: Optional[str] = None
    employee: Optional[str] = None
    industry: Optional[str] = None
    linkedin: Optional[str] = None
    twitter: Optional[str] = None
    website: Optional[str] = None


class SimilarCompany(BaseModel):
    companyName: Optional[str] = None
    description: Optional[str] = None
    employee: Optional[str] = None
    industry: Optional[str] = None
    linkedin: Optional[str] = None
    title: Optional[str] = None
    twitter: Optional[str] = None
    website: Optional[str] = None


class Snippet(BaseModel):
    description: Optional[List[str]] = None
    text: Optional[List[str]] = None
    title: Optional[List[str]] = None


class Terms(BaseModel):
    link: Optional[str] = Field(
        None,
        description='Comma separated list of search terms. Ex. terms=cloud+computing,enterprise,security',
    )


class Datum(BaseModel):
    article: Optional[Article] = None
    company: Optional[ContentProCompany] = None
    snippets: Optional[ContentProSnippets] = None


class ContentproSearchGetResponse(BaseModel):
    calls_per_month: Optional[str] = None
    count_remaining: Optional[str] = None
    data: Optional[List[Datum]] = None
    renewal_date: Optional[str] = None


class ContentproSimilarTextPostRequest(BaseModel):
    text: str = Field(..., description='Any piece of text')


class ContentproSimilarTextPostResponse(BaseModel):
    calls_per_month: Optional[str] = None
    count_remaining: Optional[str] = None
    data: Optional[List[Datum]] = None
    renewal_date: Optional[str] = None


class Page(BaseModel):
    link: Optional[str] = Field(
        None,
        description='Results are returned in batches of approximately 15 companies. Use the page parameter to page through results.',
    )


class Link(BaseModel):
    link: str = Field(..., description='Any company website. Ex. apple.com')


class Page2(BaseModel):
    link: Optional[str] = Field(
        None,
        description='Results are returned in batches of approximately 10 companies. Use the page parameter to page through results.',
    )


class SimilarGetResponse(BaseModel):
    calls_per_month: Optional[str] = None
    companies: Optional[List[SimilarCompany]] = None
    count_remaining: Optional[str] = None
    input_company: Optional[InputCompany] = None
    renewal_date: Optional[str] = None


class SimilarCompanySearch(BaseModel):
    companyName: Optional[str] = None
    description: Optional[str] = None
    employee: Optional[str] = None
    industry: Optional[str] = None
    linkedin: Optional[str] = None
    snippets: Optional[List[Snippet]] = None
    title: Optional[str] = None
    twitter: Optional[str] = None
    website: Optional[str] = None


class SearchGetResponse(BaseModel):
    calls_per_month: Optional[str] = None
    companies: Optional[List[SimilarCompanySearch]] = None
    count_remaining: Optional[str] = None
    renewal_date: Optional[str] = None
